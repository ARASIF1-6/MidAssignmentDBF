﻿@model MidAssignment.Context.Employee
@using MidAssignment.Context
@{
    ViewBag.Title = "AddEmployee";

    EmployeeDatabaseEntitiesContext _dbContext = new EmployeeDatabaseEntitiesContext();
}

<style>
    .rederr {
        color: red;
        font-size: xx-small;
    }
</style>

<h2>Save Employee Information</h2>
<hr />

@using (Html.BeginForm("CreateEmployee", "Employee", FormMethod.Post))
{
    @Html.HiddenFor(x => x.Id)
    <div class="container">
        <div class="form-group">
            @Html.LabelFor(x => x.Name)
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "rederr" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.JoiningDate)
            @if (ViewBag.NoData == 0)
            {
                @Html.EditorFor(x => x.JoiningDate, new { htmlAttributes = new { @class = "form-control" } })

            }
            else
            {
                @Html.EditorFor(x => x.JoiningDate, new { htmlAttributes = new { @Value = Model.JoiningDate.Value.ToString("yyyy-MM-dd"), @class = "form-control" } })

            }
            @Html.ValidationMessageFor(x => x.JoiningDate, "", new { @class = "rederr" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Salary)
            @Html.TextBoxFor(x => x.Salary, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Salary, "", new { @class = "rederr" })
        </div>
        @{
            var departments_data = _dbContext.Departments.ToList();
        }
        <div class="form-group">
            @Html.LabelFor(x => x.DepartmentId)
            @Html.DropDownListFor(x => x.DepartmentId, new SelectList(departments_data, "DepartmentId", "DepartmentName"), "--Select--", new { @class = "form-control" })
        </div>
        <div class="form-group">
            <input id="saveBtn" type="submit" value="save" class="btn btn-primary" />
        </div>
    </div>
}

